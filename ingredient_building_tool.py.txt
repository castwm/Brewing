import pandas as pd
#Pantry
labels = ['Ingredient', 'Category', 'Malt (lbs), Hops (oz), Yeast (packs)', 'Type']
weight_label = 'Malt (lbs), Hops (oz), Yeast (packs)'
inventory = []

# name is item, amount is amount, 
def add_hop(name, amount, classify, where_to):
    name = str(name)
    amount = amount
    package = str(classify)
    entry = [name, 'Hop', amount, package]
    where_to.append(entry)
    
def add_malt(name, amount, classify, where_to):
    name = str(name)
    amount = amount
    package = str(classify)
    entry = [name, 'Malt', amount, package]
    where_to.append(entry)

def add_yeast(name, amount, classify, where_to):
    name = str(name)
    amount = amount
    package = str(classify)
    entry = [name, 'Yeast', amount, package]
    where_to.append(entry)
    
# add_other function for starsan bottles, and priming sugar

def title(name):
    name = name
    bold ='\033[1m'
    print(bold + name)
    
# Add Grains and Extracts
add_malt('Briess Pilsen M', 1.5, 'Grain', inventory)
add_malt('Goldpils Vienna Malt', 2, 'Grain', inventory)
add_malt('Light Roasted Barley', .75, 'Grain', inventory)
add_malt('Belgian Special', .75, 'Grain', inventory)
add_malt('Briess Carapils', .5, 'Grain', inventory)
add_malt('Two Row', 5, 'Grain', inventory)
add_malt('CBW Bavarian Wheat',6.6, 'Extract', inventory)

# Add Hops
add_hop('Hersbrucker', 1, 'Pellet', inventory)
add_hop('New Zealand Pacific Jade', 0.5, 'Pellet', inventory)
add_hop('Motueka', 0.5, 'Pellet', inventory)

# Add Yeasts
add_yeast('SafAle WB-06', 1, 'Dry', inventory)

pantry = pd.DataFrame(data = inventory, columns = labels)

title('Pantry')
pantry.head(len(pantry))


#check this out 
#https://stackoverflow.com/questions/50449088/check-if-value-from-one-dataframe-exists-in-another-dataframe

Pantry

Out[5]:
	Ingredient 	Category 	Malt (lbs), Hops (oz), Yeast (packs) 	Type
0 	Briess Pilsen M 	Malt 	1.50 	Grain
1 	Goldpils Vienna Malt 	Malt 	2.00 	Grain
2 	Light Roasted Barley 	Malt 	0.75 	Grain
3 	Belgian Special 	Malt 	0.75 	Grain
4 	Briess Carapils 	Malt 	0.50 	Grain
5 	Two Row 	Malt 	5.00 	Grain
6 	CBW Bavarian Wheat 	Malt 	6.60 	Extract
7 	Hersbrucker 	Hop 	1.00 	Pellet
8 	New Zealand Pacific Jade 	Hop 	0.50 	Pellet
9 	Motueka 	Hop 	0.50 	Pellet
10 	SafAle WB-06 	Yeast 	1.00 	Dry
In [6]:

# Flagship Amber Ale Ingredients
amber_ale_ingredients = []

add_malt('Caramel 80L', 0.5, 'Grain', amber_ale_ingredients)
add_malt('Light Roasted Barley', 0.125, 'Grain', amber_ale_ingredients)
add_malt('Belgian Special', 0.125, 'Grain', amber_ale_ingredients)
add_malt('Briss Gold Malt Syrup', 6, 'Extract', amber_ale_ingredients)

add_hop('Willamette', 1, 'Pellet', amber_ale_ingredients)

add_yeast('Wyeast 1056', 1, 'Liquid', amber_ale_ingredients)
add_yeast('Muntons Ale Yeast', 1, 'Dry', amber_ale_ingredients)

amber_ale = pd.DataFrame(data = amber_ale_ingredients, columns = labels)
title('Amber Ale Recipe')
amber_ale.head(len(amber_ale))

Amber Ale Recipe

Out[6]:
	Ingredient 	Category 	Malt (lbs), Hops (oz), Yeast (packs) 	Type
0 	Caramel 80L 	Malt 	0.500 	Grain
1 	Light Roasted Barley 	Malt 	0.125 	Grain
2 	Belgian Special 	Malt 	0.125 	Grain
3 	Briss Gold Malt Syrup 	Malt 	6.000 	Extract
4 	Willamette 	Hop 	1.000 	Pellet
5 	Wyeast 1056 	Yeast 	1.000 	Liquid
6 	Muntons Ale Yeast 	Yeast 	1.000 	Dry
In [7]:

# Father's Day IPA
fathers_day_ipa_v1e_ingedients=[]

add_malt('Briess Pilsen M', 1.5, 'Grain', fathers_day_ipa_v1e_ingedients)
add_malt('Goldpils Vienna', 2, 'Grain', fathers_day_ipa_v1e_ingedients)
add_malt('Briess Carapils', 0.5, 'Grain', fathers_day_ipa_v1e_ingedients)
add_malt('Pilsen Malt Extract', 6.3, 'Extract', fathers_day_ipa_v1e_ingedients)

add_hop('Pacific Jade', 1.5, 'Pellet', fathers_day_ipa_v1e_ingedients)
add_hop('Motueka', 3, 'Pellet', fathers_day_ipa_v1e_ingedients)
add_hop('Nelson Sauvin', 1, 'Pellet', fathers_day_ipa_v1e_ingedients)
add_hop('Sorachi Ace', 1, 'Pellet', fathers_day_ipa_v1e_ingedients)

add_yeast('SafAle US-05', 1, 'Dry', fathers_day_ipa_v1e_ingedients)

fathers_day_ipa_v1e = pd.DataFrame(fathers_day_ipa_v1e_ingedients, columns = labels)

title("Father's Day IPA Version 1.Extract")
fathers_day_ipa_v1e.head(len(fathers_day_ipa_v1e))

Father's Day IPA Version 1.Extract

Out[7]:
	Ingredient 	Category 	Malt (lbs), Hops (oz), Yeast (packs) 	Type
0 	Briess Pilsen M 	Malt 	1.5 	Grain
1 	Goldpils Vienna 	Malt 	2.0 	Grain
2 	Briess Carapils 	Malt 	0.5 	Grain
3 	Pilsen Malt Extract 	Malt 	6.3 	Extract
4 	Pacific Jade 	Hop 	1.5 	Pellet
5 	Motueka 	Hop 	3.0 	Pellet
6 	Nelson Sauvin 	Hop 	1.0 	Pellet
7 	Sorachi Ace 	Hop 	1.0 	Pellet
8 	SafAle US-05 	Yeast 	1.0 	Dry
In [8]:

# American Hefeweizen
am_hef = []
add_malt('CBW Bavarian Wheat', 6.3, 'Extract', am_hef)
add_hop('Hersbrucker', 1, 'Pellet', am_hef)
add_yeast('SafAle WB-06', 1, 'Dry', am_hef)

american_hefeweizen = pd.DataFrame(data = am_hef, columns = labels)

american_hefeweizen.head()

Out[8]:
	Ingredient 	Category 	Malt (lbs), Hops (oz), Yeast (packs) 	Type
0 	CBW Bavarian Wheat 	Malt 	6.3 	Extract
1 	Hersbrucker 	Hop 	1.0 	Pellet
2 	SafAle WB-06 	Yeast 	1.0 	Dry
In [17]:

# Can I make this recipe?
drop = ['Category', 'Type']
make = fathers_day_ipa_v1e
recipe = make.drop(columns = drop)
recipe.set_index('Ingredient')
pantry_compare = pantry.drop(columns = drop)
pantry_compare.set_index('Ingredient')
if [recipe['Ingredient'].isin(pantry_compare['Ingredient'])]:
	if recipe['Ingredient']['Malt (lbs), Hops (oz), Yeast (packs)'] <= pantry_compare['Ingredient']['Malt (lbs), Hops (oz), Yeast (packs)']:
		print('You can make this recipe')
#print(yes_or_no)

